# Generated by Django 5.2 on 2025-04-29 15:02

from django.db import migrations, models
from django.contrib.auth import get_user_model

def handle_duplicate_emails(apps, schema_editor):
    User = apps.get_model('users', 'User')
    # Get all users with duplicate emails
    from django.db.models import Count
    duplicate_emails = User.objects.values('email').annotate(count=Count('email')).filter(count__gt=1)
    
    for email_data in duplicate_emails:
        email = email_data['email']
        users = User.objects.filter(email=email).order_by('id')
        # Keep the first user, update others
        first_user = users.first()
        for i, user in enumerate(users[1:], 1):
            user.email = f"{email.split('@')[0]}{i}@{email.split('@')[1]}"
            user.save()

class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(handle_duplicate_emails),
        migrations.RemoveField(
            model_name='user',
            name='username',
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=254, unique=True, verbose_name='email address'),
        ),
    ]
